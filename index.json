[{"content":" 本人原来使用的博客是vuepress + vdoing，后来在使用的过程中发现这个博客非常的笨重，没有多少的文章编译下来就需要一会时间。\n以前使用过wordpress，这个用来建站是很不错的选择用来做博客的话需要有自己的服务器，并且对于Markdown文档的支持不是很好，现在的博客基本上是使用markdown来写，所以不考虑wordpress。\n然后了解到Hugo的出现，看了他的优势，打包速度快，几乎不受文件多少的影响。为了更好专注在写文章，同时可以不用每次繁琐的命令行操作和发布，本教程实现了快捷键操作的一键发布。\n文章内容所见即所得。写完文章后快捷键 Crtl + U快速发布文章，然后等待GitHub Action部署完成，刷新页面就可以看到新文章，如下为展示的效果：\n快速开始 现在已经把整套流程打通了，直接参考下面的步骤，可以实现Obsidian写博客+自动发布和部署。\n下载(Obsidian)并安装 下载安装Git-Bash 配置Git - 生成 SSH 公钥 (git-scm.com) 创建github新项目为：你的用户名.github.io，如SivanLaai.github.io，其中SivanLaai为我的用户名 克隆本项目并切换分支 1 git clone --recursive git@github.com:SivanLaai/blog.git \u0026amp;\u0026amp; cd blog \u0026amp;\u0026amp; git checkout master 进入blog目录，修改git远程仓库为你的github静态博客项目地址 1 git remote set-url origin git@github.com:SivanLaai/SivanLaai.github.io.git (可选) - 添加Github项目环境变量WEB_SITE为你自己的域名如www.sivanlaai.top 利用obsidian打开blog文件夹，开始写博客 快捷键 Crtl + U快速发布文章（利用Obsidian Shell Command插件实现快速发布） 打开你的网址，如sivanlaai.github.io 其他玩法 评论功能（可选） **建议新手根据自己的时间来衡量是否加入，不然折腾起来也挺费劲，容易遇到这种问题。确实有时间的可以尝试\n本教程中使用的hugo主题是papermod，同时加入了评论功能，使用的是Waline评论系统，比较推荐使用这个评论系统，支持自建后端也可以使用免费的后端云服务，有评论管理功能，安全，支持登录和匿名模式，爆吹。\n对于Waline的详细使用请看官方教程，根据官方教程配置好Waline后端好，在config.yml里面如下：\n1 2 waline: serverUrl: \u0026#34;WALINE_SERVER_URL\u0026#34; 把WALINE_SERVER_URL替换成你的Waline服务地址就可以。\n参考文章 Obsidian + Hugo 最佳配置推荐 | 胡说 (zhangyingwei.com) Hugo 博客写作最佳实践 | 胡说 (zhangyingwei.com) 使用Github Actions对Hexo博客自动部署 - zu1k ","permalink":"http://www.sivanlaai.top/posts/experience/software/obsdidian_hugo_auto_deploy/","summary":"本人原来使用的博客是vuepress + vdoing，后来在使用的过程中发现这个博客非常的笨重，没有多少的文章编译下来就需要一会时间。 以前使用","title":"Obsidian写hugo博客，github自动部署"},{"content":"作为在读博士，在阅读几百篇论文的过程中，总结了一些经验方法，分享给大家（文末有彩蛋哦）。\n如果你在阅读文献时遇到如下问题，那么这篇文章的经验方法一定能帮到你。\n拿到一篇文献应当先看那部分？有哪些好的/高效阅读文献的方法？ 看文献特别容易犯困；看不懂后，就看不下去了？ 每次都仔细看摘要、然后往下逐字看、但看着就走神了？ 看完就忘，没有印象怎么办？ 对文章无感、抓不住重点、也看不进去、有没有好方法？ 有时候看完文章，不懂别人讲的是什么？ 只能看懂一小点、如何向导师汇报？ 看了就看了，没收获、没感觉、没想法、怎么办？ 觉得别人写的真好，但自己没有任何想法、找不到缺点？ 创新点最难看懂？编程最难搞？怎么解决？ 不了解领域研究进展，抓不住重点？ 阅读后，不知如何总结写在论文中？ 阅读了很多文献、仍找不到创新点？如何在文献中找创新点？\n通过梳理上述问题，不难发现，阅读文献主要有4类问题：不知道如何看？看不懂？看了没收获？阅读效率低？\n存在问题的原因是没有掌握阅读文献的正确方法和笔记做法，未对文献进行归纳总结和有效思考。\n为解决以上问题，帮助大家提高阅读效率、获取价值信息，本文分享4种文献阅读方法+4种文献笔记做法，并阐述具体的阅读流程、操作步骤和实例展示。\n全文共计6300字，足足写了1个星期，反复修改了好几遍。只为给大家展现实用的方法经验，所以文章内容较长，建议大家先双击屏幕点赞+收藏，然后慢慢学习。同时，建议通过写论文实践锻炼，一定会有大收获哦。\n本文主旨内容概况如下：\n下面，详细介绍4种文献阅读方法+4种文献笔记做法。\n一、高效阅读文献的4种实用方法 1、内容概述 文献阅读的4种方法：精读、泛读、快读、跳读。\n**高效阅读文献的关键是：带着问题读文献、并及时总结归纳。**因此，首先建议大家明确研究方向、最好能明确一个具体的研究问题；然后带着问题去检索下载文献；最后通过下文所述阅读方法、高效阅读文献。无研究问题的文献阅读效率会很低，往往事倍功半。\n如何判断一篇文献适合哪种阅读方法？建议通过快速阅读文献的题目、摘要和关键词，明确文献的研究问题、研究方法、实验设计和创新点。然后通过文献研究相关性及程度判断选择阅读方法。依据如下：\n精读文献特征：与自身研究方向及问题十分相近、算法/解决方法/实验设计/解决问题相似度极高、创新点极好的高水平论文。 泛读文献特征：与自身研究方向或问题较相关、算法/解决方法/实验设计/解决问题相似度较高、创新点较好的高水平论文。 快读文献特征：与研究方向或问题部分相关、算法/解决方法/实验设计/解决问题有相似之处。 跳读文献特征：文献中有需要学习借鉴的内容，比如：新概念、新模型、新方法等。\n4种文献阅读方法的操作流程。每一种阅读方法不是孤立的，而是相辅相成的。如下图：\n举例说明，拿到一篇文献，通过快读题目、摘要和关键词，初步判定文献是否与自身研究相关。如果相关，再利用跳读方法阅读结论/结果和实验/模型部分，进一步判断相关程度；如果相关度极高，将文献归入精读文件夹；如果相关度不太高，将文献归入泛读文件夹。如果不相关，则归入无关文献文件夹。\n2、精读文献方法 主要内容：\n精读文献意义：精读文献是与自身研究相关度极高的论文，通过精读文献帮助我们了解研究问题的研究进展、最新研究成果、学习研究方法等，并据此拓展研究视野、丰富研究方法、判断所做研究价值、创新性程度等。\n精读文献目标：（1）能利用一句话准确概况出论文的创新点、并分析指出论文的优点和不足。如此，就算吸收了这篇文献，并能将总结写入研究论文的引言中，客观地引用概况该论文的贡献。（2）学习掌握论文所提研究方法/模型/算法/实验设计等核心内容，内化吸收、为己所用。想达到这种目标，需要掌握正确的精读方法，往往需要反复精读、及时做笔记总结归纳、甚至复现论文。\n精读文献方法：建议研究生新生将需精读的论文打印、装订成册，带着下文提到的7类问题、有目的性的反复阅读、层层拆解学习、有必要时可以考虑复现论文结果。随着科研不断深入，对研究方向领域有一定认识和积累后，可以考虑电子版精读文献、不再打印阅读。\n不建议新生刚开始采用电子版精读文献，因为随着研究不断深化、需要反复查看精读文献、不断吸收内化，如此，纸质版是最方便找到的、而电子版不容易及时翻看。\n**精读文献时需要明确哪些问题？**带着问题阅读并寻找答案是提高效率的关键。因此，建议大家尝试，带着下文列出的7类问题，在精读文献过程中找答案，并及时做笔记总结问题答案。\n阅读的7类问题：\n研究背景：论文研究领域/背景是什么？ 研究目的：论文解决了什么问题？一句话概括创新点？ 研究方法：有哪些方法？/解决过程？/求解技巧/算法？ 研究模型：场景模型？/数学模型/实验设计等？ 研究方法适用范围：论文假设条件？/忽略因素？ 研究结果：结果/结论？/理论意义及实用价值？ 主动思考：有哪些值得学习借鉴的地方？存在哪些不足或未解决的问题？/进一步可展望的地方？为什么这篇论文能发表？且能发表在该期刊上？\n精读文献笔记做法：建议新生采用4种方法：七彩标记法、纸质笔记、Word总结法和Excel精炼法。4种笔记做法详见第二部分的笔记做法内容。\n复现论文方法思路：建议先从课题组已有资源学习，找到已发表论文和对应模型及程序或实验设计等资源，然后不断思考、学习，模仿编程，再到独立编程、构建模型，最后再复现他人论文。\n这样做的原因是：如果一开始就选择硬钢他人论文模型和程序，往往会遇到很多问题，且很难复现。因为论文模型和程序都是比较完整的，涉及很多知识、编程技巧和模型约束条件等。新生往往缺乏理论背景知识、编程能力较差等，因此很难直接复现他人论文。\n精读文献流程：打印装订文献、带着问题阅读、做好4种笔记、复现论文结果、总结问题答案、提炼出创新点。\n3、泛读文献方法 主要内容：\n泛读文献意义/目标：泛读文献与自身研究较相关，通过泛读帮助我们了解现有研究的进展、新方法/新模型/新实验等，并获取一定的知识学习，据此，有目的性的丰富研究方法/思路。\n泛读文献方法：建议阅读电子版。步骤：带着问题，通过快读初步了解文献研究背景、目的、方法、结果结论；跳读到对研究有价值的地方、详细学习研究、可选择性复现论文内容（研究方法/算法/模型等）；最后做好学习笔记，及时总结。\n泛读文献笔记做法：建议采用3种方法：七彩标记法、纸质笔记或Word总结法（2选1）、Excel精炼法。3种笔记做法及步骤示例，与精读文献笔记做法相同，详见第二部分内容。\n泛读文献流程：阅读电子文献、快读初步了解、跳读精细学习、做好3种笔记、复现论文内容、总结问题答案、提炼出创新点。\n泛读与精读的区别：\n首先，两种方法的阅读详细程度及作用意义不同。\n精读文献与研究极其相关、往往需要反复阅读、仔细拆解学习、甚至复现论文结果数据，即通过吃透文献拓展我们对研究问题的认知及研究方法。通过一篇篇精读和总结，帮助我们系统的建立研究知识架构和方法体系。 泛读文献与研究相关，需要我们大体了解研究背景、研究方法等，如果确实需要，可以定位学习并复现研究模型方法。即通过泛读查缺补漏、定位拓展研究认知方法、继续丰富我们的研究知识架构和方法体系。\n其次，文献笔记不同。精读文献需做4种阅读笔记；泛读做好3种笔记。\n4、快读文献方法 主要内容：\n快读文献意义/目标：通过快读文献标题、摘要、关键词初步了解文献与自身研究的相关性，然后帮我们快速确定是否需要精读或泛读；当我们追踪论文时，通过快读论文的标题、摘要、图表和结论等内容，能快速了解作者的最新研究进展和方向；提炼篇论文观点；同时，当我们想获取文献的某个观点佐证研究时，通过快读和跳读精确定位和提炼。\n小结快读意义：辅助文献分类；跟踪最新研究进展；提炼佐证观点。\n快读文献方法：建议阅读电子版。步骤：快读文献标题、摘要、关键词、图表和结论等，确定文献是否有价值，结合跳读，进一步判断归属精读、泛读；或提炼佐证观点。\n快读笔记做法：建议采用2种方法：七彩标记法、、Excel精炼法。2种笔记做法及步骤示例，与精读文献笔记做法相同，详见第二部分内容。\n快读文献流程：阅读电子文献、快读了解论文、跳读辅助分类、做好2种笔记、提炼佐证观点、总结问题答案、提炼出创新点。\n5、跳读文献方法 主要内容：\n跳读文献意义/目标：快读判定文献相关，利用跳读进一步阅读图表、结果，将文献归属精读或泛读；文献中有需要学习借鉴的地方，直接跳读快读定位该部分，获取价值信息。提高获取有限信息的效率。\n小结跳读意义：辅助文献分类；快速定位价值信息。\n跳读文献方法：建议阅读电子版。步骤：先快读初判文献价值，跳读定位价值信息处，精准提炼价值信息（研究算法、图表、结论）。\n跳读笔记做法：建议采用2种方法：七彩标记法、、Excel精炼法。2种笔记做法及步骤示例，与精读文献笔记做法相同，详见第二部分内容。\n跳读文献流程：阅读电子文献、快读了解论文、跳读定位信息、做好2种笔记、提炼价值信息、总结问题答案、提炼出创新点。\n6、总结文献阅读方法 上述内容，分享了4种文献阅读方法、阐述了方法意义、展示了流程步骤。其意义总结如下：\n精读文献，帮助我们系统的建立研究知识架构和方法体系。 泛读文献，帮助我们查缺补漏、拓展视野、完善研究知识架构和方法体系。 快读文献，帮助我们做好文献分类、跟踪最新研究进展、提炼论文佐证观点。 跳读文献，帮助我们做好文献分类、快速定位和提炼价值信息。\n研究生在阅读文献过程中，会遇到各种各样的问题；不知道如何看？先看那部分？看不懂？看了没效果/没收获？仍无法发现创新点？等等，我把详细的经验方法分享在了公众号【学术斋】。同时，我们组成了上千人的研究生学习、论文写作交流群，我也会在群里为大家答疑解惑、分享资源干货。私信获取资源干货并进群学习哦。\n掌握了正确的阅读方法，不做笔记、未对文献进行归纳总结和有效思考，仍会存在看完就忘，没收获、没感觉、找不到创新点的问题。因此掌握正确的笔记做法十分重要。\n二、获取科研Idea的4种文献笔记做法 1、内容概述 主要讲述4种文献笔记做法：七彩标记法、手写笔记法、Word总结法、Excel精炼法。\n**首先明确为什么做笔记？**答案是记录有价值的信息，丰富研究体系方法，佐证论文观点。\n**其次，如何做笔记？重点记录那些东西？**利用本文所述4种笔记方法，总结记录以下信息：论文基本信息、领域背景/目的、创新点，研究方法/实验设计，求解问题、场景模型/数学模型、求解技巧/算法/实验步骤流程、假设条件和忽略因素、结果/结论、不足/展望/启发思考等。\n2 七彩标记法 主要内容：\n七彩标记法的内容做法：阅读文献过程中，利用红橙黄绿青蓝紫等七种颜色，分别标记7类问题。保证一种颜色对应一类问题。标记方法可以底色高亮、划线、写字批注等。适用于电子版和纸质版的阅读笔记。\n实例展示：\n示例中，不同颜色对应了不同类型的问题内容，摘要/正文等都可对应标记。\n提示说明：哪种颜色对应哪类问题？根据个人喜好选择即可。建议使用高亮颜色标记重要内容。\n小Q学长常用颜色：\n红：研究方法：方法内容/解决过程/求解技巧算法？ 橙：模型场景：场景模型/数学模型/实验设计等？ 黄：方法适用范围：假设条件/忽略因素/约束条件？ 绿：研究结果：结果/结论？ 青：研究目的：解决了什么问题/论文创新点？ 蓝：研究背景：论文研究领域/背景是什么？ 紫：提炼思考：可借鉴内容/不足/未解决问题/展望？\n**如何调用7种颜色标记PDF文献？**采用“极速PDF阅读器”看文献，点击菜单栏“注释”，点击“写字/高亮/划线”等标记，有12种颜色可供选择。\n七彩标记法的用途价值：第一次阅读时，使用七种颜色标记做好笔记，后续总结提炼和复读时，能快速根据颜色定位价值信息，提高阅读总结效率。即通过颜色分类，提高阅读、复读及获取信息的效率。\n3 手写笔记法 主要内容：\n手写笔记的内容做法：顾名思义，在阅读文献后，将文献价值信息，提炼手写在笔记本上，方便日后快速翻阅。书写内容应重视可读性和价值性，可包含：文献名称、研究问题、研究方法、研究结果、研究优缺点及进一步可待研究的问题等。\n提示说明：建议手写笔记尽量精炼，针对每一类问题，需要我们思考、总结、提炼出对应的一两句话概况，切勿大篇幅祥尽或将论文内容直接搬到笔记本。不经思考总结的笔记，价值不大。\n手写笔记的用途价值：锻炼思考提炼价值信息的概况能力，方便日后快速翻阅。\n4 Word总结法 主要内容\nWord总结法的内容做法：阅读文献后，对文献内容进一步思考总结，将尽量详细的价值信息提炼至Word。内容可包含：文献名称、研究领域背景、研究目的、创新点、研究方法/模型/适用范围、结论/结果、价值分析、对研究的启发思考等。\n实例展示：\n提示说明：需要深入思考、积极总结对自身研究的启发内容，这些启发内容就是可进一步研究的内容，可作为新的研究课题。\n经过深入分析和思考，不难发现，在上述实例展示中，针对这1篇文献，就发现了4个可以研究的点，这就是创新点之处，再经过仔细思考，撰写一篇小论文足以。\nWord总结法的用途价值：Word笔记相当于文献的翻版再现及思考总结。通过阅读Word，能获取原文献信息。锻炼提升文献阅读的信息总结能力及思考分析能力，便于日后翻阅。深入的启发思考内容，能拓展研究视野、获取创新点、找到新的研究课题。\n5 Excel精炼法 主要内容：\nExcel精炼法的内容做法：阅读文献后，对文献内容深入思考总结，将关键价值信息精简提炼至Excel中。内容可包含：文献名称、领域背景、研究方法/模型、约束条件、求解算法、评价、启发思考等。\n实例展示：\n提示说明：需要深入思考，高度归纳总结，提炼关键价值信息，精炼至Excel；客观评价已有文献的优缺点/不足等，以便正确引用文献，佐证论文观点。\nExcel精炼法的用途价值：更像索引/提纲式的笔记总结方法，便于快速复读文献的关键价值内容。将研究主题相同或相近的论文总结至1个Excel中，便于总结及横向对比，更有利于掌握问题的研究进展，启发思考获取创新点。同时，表格中的“评价内容”可用于论文引言内容对已有研究文献的客观概述（获取引文信息），方便快捷。\n6 小结文献笔记做法 分享了4种文献笔记做法，并给出了详细说明和实例展示。希望对大家的科研有帮助。\n4种文献笔记做法的意义总结：\n七彩标记法：利用颜色标记问题，帮助我们快速定位价值信息，提高文献阅读、复读及信息获取效率。 手写笔记法：锻炼我们对价值信息的思考提炼及总结能力，便于日后翻阅，快速获取文献信息。 Word总结法：帮助我们尽量详尽的获取文献价值信息，锻炼提升思考启发内容，获取研究课题思路。 Excel精炼法：锻炼我们对研究主题相同或相近文献的归纳总结能力，帮助我们掌握问题研究进展，获取引文信息及研究思路。\n三、总结 以上分享了4种阅读文献的的方法和4种笔记做法。希望帮助大家解决：如何阅读文献？如何看懂文献？如何获取创新点？如何提高阅读效率？这4个关键问题。\n通过阅读文献并思考总结，能帮助我们掌握研究领域背景，了解问题研究进展，丰富知识体系和研究方法架构、启发获取创新点、掌握论文撰写套路等。\n正确的文献阅读方法，更能帮助我们在有限的时间内，获取更多的价值信息，提高科研效率。\n如果阅读文献没有章法，很容易浪费时间、收获甚少、效率较低。\n建议大家在科研过程中，结合自身实际需求，不断总结优化文献阅读方法，逐步找到适合自己的高效方法。\n研究生在阅读论文、撰写论文、投稿过程中，会遇到各种各样的问题。不懂如何从文献中提取创新点？不知如何复现论文结果？不懂编程仿真/模型构架？不懂实验操作/设计？不懂论文格式？不会写摘要结论？引言写不好？等等，我把解决问题的经验方法分享在了公众号【学术斋】。同时，我们组成了上千人的研究生学习、论文写作交流群，我也会在群里为大家答疑解惑、分享资源干货，私信领取干货资源并进群哦。\n最后，400G科研必备资料免费分享给大家，点赞+关注我+私信领取哦~\n【400G科研必备资料】网盘分享如下：\n","permalink":"http://www.sivanlaai.top/posts/learning/paper_reading_method/","summary":"作为在读博士，在阅读几百篇论文的过程中，总结了一些经验方法，分享给大家（文末有彩蛋哦）。 如果你在阅读文献时遇到如下问题，那么这篇文章的经验方","title":"论文阅读方法"},{"content":" title: nextcloud配置 date: 2021-12-08 14:39:24 permalink: /pages/20632c/ categories:\n百科 常见问题 tags: nextcloud网盘相关问题 网盘配置 （1）配置环境 Linux + Apache2 + Mysql + Php(LAMP) Example installation on Ubuntu 20.04 LTS — Nextcloud latest Administration Manual latest documentation 配置Linux + Nginx + Mysql + Php(LNMP)环境 1 2 3 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade sudo apt install mariadb-server nginx php-gd php-mysql php-fpm \\ php-curl php-mbstring php-intl php-gmp php-bcmath php-xml php-imagick php-zip （2）安装nextcloud Installation on Linux — Nextcloud latest Administration Manual latest documentation\n（3）Nginx配置解析php Nginx配置上传大小 1 2 3 4 5 6 # /etc/nginx/nginx.conf http { client_max_body_size 20480M; client_body_buffer_size 10M; } 修改配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # /etc/nginx/conf.d/nextcloud.conf ## # You should look at the following URL\u0026#39;s in order to grasp a solid understanding # of Nginx configuration files in order to fully unleash the power of Nginx. # https://www.nginx.com/resources/wiki/start/ # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ # https://wiki.debian.org/Nginx/DirectoryStructure # # In most cases, administrators will remove this file from sites-enabled/ and # leave it as reference inside of sites-available where it will continue to be # updated by the nginx packaging team. # # This file will automatically load configuration files provided by other # applications, such as Drupal or Wordpress. These applications will be made # available underneath a path with that package name, such as /drupal8. # # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples. ## # Default server configuration # upstream php-handler { #server 127.0.0.1:9000; server unix:/run/php/php8.1-fpm.sock; } server { listen 80; listen [::]:80; server_name nextcloud.sivanlaai.top; # Path to the root of your installation root /var/www/nextcloud; # Enable gzip but do not remove ETag headers gzip on; gzip_vary on; gzip_comp_level 4; gzip_min_length 256; gzip_proxied expired no-cache no-store private no_last_modified no_etag auth; gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy; # Pagespeed is not supported by Nextcloud, so if your server is built # with the `ngx_pagespeed` module, uncomment this line to disable it. #pagespeed off; # HTTP response headers borrowed from Nextcloud `.htaccess` add_header Referrer-Policy \u0026#34;no-referrer\u0026#34; always; add_header X-Content-Type-Options \u0026#34;nosniff\u0026#34; always; add_header X-Download-Options \u0026#34;noopen\u0026#34; always; add_header X-Frame-Options \u0026#34;SAMEORIGIN\u0026#34; always; add_header X-Permitted-Cross-Domain-Policies \u0026#34;none\u0026#34; always; add_header X-Robots-Tag \u0026#34;none\u0026#34; always; add_header X-XSS-Protection \u0026#34;1; mode=block\u0026#34; always; # Remove X-Powered-By, which is an information leak fastcgi_hide_header X-Powered-By; # Specify how to handle directories -- specifying `/index.php$request_uri` # here as the fallback means that Nginx always exhibits the desired behaviour # when a client requests a path that corresponds to a directory that exists # on the server. In particular, if that directory contains an index.php file, # that file is correctly served; if it doesn\u0026#39;t, then the request is passed to # the front-end controller. This consistent behaviour means that we don\u0026#39;t need # to specify custom rules for certain paths (e.g. images and other assets, # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus # `try_files $uri $uri/ /index.php$request_uri` # always provides the desired behaviour. index index.php index.html /index.php$request_uri; # Rule borrowed from `.htaccess` to handle Microsoft DAV clients location = / { if ( $http_user_agent ~ ^DavClnt ) { return 302 /remote.php/webdav/$is_args$args; } } location = /robots.txt { allow all; log_not_found off; access_log off; } # Ensure this block, which passes PHP files to the PHP process, is above the blocks # which handle static assets (as seen below). If this block is not declared first, # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php` # to the URI, resulting in a HTTP 500 error response. location ~ \\.php(?:$|/) { # Required for legacy support rewrite ^/(?!index|remote|public|cron|core\\/ajax\\/update|status|ocs\\/v[12]|updater\\/.+|oc[ms]-provider\\/.+|.+\\/richdocumentscode\\/proxy) /index.php$request_uri; fastcgi_split_path_info ^(.+?\\.php)(/.*)$; set $path_info $fastcgi_path_info; try_files $fastcgi_script_name =404; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param PATH_INFO $path_info; fastcgi_param modHeadersAvailable true; # Avoid sending the security headers twice fastcgi_param front_controller_active true; # Enable pretty urls fastcgi_pass php-handler; fastcgi_intercept_errors on; fastcgi_request_buffering off; fastcgi_max_temp_file_size 0; } # Rule borrowed from `.htaccess` location /remote { return 301 /remote.php$request_uri; } location / { try_files $uri $uri/ /index.php$request_uri; } set $jellyfin 127.0.0.1; location /video { # Proxy main Jellyfin traffic rewrite ^/video/(.*)$ /$1 break; proxy_pass http://$jellyfin:8096; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; # Disable buffering when the nginx proxy gets very resource heavy upon streaming proxy_buffering off; } # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/ location = /video/web/ { # Proxy main Jellyfin traffic proxy_pass http://$jellyfin:8096/web/index.html; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; } } 生效服务 1 2 sudo service nginx restart sudo service php8.1-fpm restart 请更改权限为 0770 以避免其他用户查看目录 config.php\n1 2 3 . \u0026#39;check_data_directory_permissions\u0026#39; =\u0026gt; false, ... 安装配置启动aria2 安装aria2 1 2 sudo apt install aria2 cd /etc/ \u0026amp;\u0026amp; mkdir aria2 \u0026amp;\u0026amp; cd aria2 \u0026amp;\u0026amp; touch aria2c.conf \u0026amp;\u0026amp; touch aria2.session 创建配置文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 #aria2c.conf ## 文件保存相关 ## # 文件保存目录 dir=/var/www/nextcloud/data/nextcloud/files/Video # 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M disk-cache=32M # 断点续传 continue=true # 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc # 预分配所需时间: none \u0026lt; falloc ? trunc \u0026lt; prealloc # falloc和trunc则需要文件系统和内核支持 # NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项 file-allocation=trunc ## 下载连接相关 ## # 最大同时下载任务数, 运行时可修改, 默认:5 #max-concurrent-downloads=10 # 同一服务器连接数, 添加时可指定, 默认:1 # 官方的aria2最高设置为16, 如果需要设置任意数值请重新编译aria2 max-connection-per-server=16 # 整体下载速度限制, 运行时可修改, 默认:0（不限制） #max-overall-download-limit=0 # 单个任务下载速度限制, 默认:0（不限制） #max-download-limit=0 # 整体上传速度限制, 运行时可修改, 默认:0（不限制） #max-overall-upload-limit=0 # 单个任务上传速度限制, 默认:0（不限制） #max-upload-limit=0 # 禁用IPv6, 默认:false # disable-ipv6=true # 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M # 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载 min-split-size=10M # 单个任务最大线程数, 添加时可指定, 默认:5 # 建议同max-connection-per-server设置为相同值 split=16 ## 进度保存相关 ## # 从会话文件中读取下载任务 input-file=/etc/aria2/aria2.session # 在Aria2退出时保存错误的、未完成的下载任务到会话文件 save-session=/etc/aria2/aria2.session # 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0 save-session-interval=60 ## RPC相关设置 ## # 启用RPC, 默认:false enable-rpc=true # 允许所有来源, 默认:false rpc-allow-origin-all=true # 允许外部访问, 默认:false rpc-listen-all=true # RPC端口, 仅当默认端口被占用时修改 # rpc-listen-port=6800 # 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项 rpc-secret=passwd #在访问的时候要使用到的密码 # 启动SSL #rpc-secure=true # 证书文件, 如果启用SSL则需要配置证书文件, 例如用https连接aria2 #rpc-certificate=/var/snap/nextcloud/current/certs/live/fullchain.pem #rpc-private-key=/var/snap/nextcloud/current/certs/live/privkey.pem ## BT/PT下载相关 ## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.77 # 强制保存会话, 即使任务已经完成, 默认:false # 较新的版本开启后会在任务完成后依然保留.aria2文件 #force-save=false # 继续之前的BT任务时, 无需再次校验, 默认:false bt-seed-unverified=true # 保存磁力链接元数据为种子文件(.torrent文件), 默认:false # bt-save-metadata=true # 单个种子最大连接数, 默认:55 0表示不限制 bt-max-peers=0 # 最小做种时间, 单位:分 seed-time = 1 # 分离做种任务 bt-detach-seed-only=true on-download-complete=/home/filesscan.sh 启动aria2 1 nohup aria2c --conf-path=/etc/aria2/aria2.conf \u0026gt; /home/linux/aria2.log 2\u0026gt;\u0026amp;1 \u0026amp; 配置aria2 自动更新bt tracker 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # startaria.sh while(true) do sudo kill -9 $(ps -ef|grep aria2|gawk \u0026#39;$0 !~/grep/ {print $2}\u0026#39; |tr -s \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) list=`wget -qO- https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt|awk NF|sed \u0026#34;:a;N;s/\\n/,/g;ta\u0026#34;` echo $list if [ -z \u0026#34;`grep \u0026#34;bt-tracker\u0026#34; /etc/aria2/aria2.conf`\u0026#34; ]; then sudo sed -i \u0026#39;$a bt-tracker=\u0026#39;${list} /etc/aria2/aria2.conf echo add...... else sudo sed -i \u0026#34;s@bt-tracker.*@bt-tracker=$list@g\u0026#34; /etc/aria2/aria2.conf echo update...... fi sudo aria2c --conf-path=/etc/aria2/aria2.conf sleep 24h #sleep 10 done 配置nextcloud启动脚本 1 2 3 4 5 6 7 8 9 10 11 12 # startserver.sh sudo service apache2 stop sudo service apache2 start sudo /etc/init.d/mysql start # 运行aria2脚本更新bt trackers sudo nohup bash startaria.sh \u0026gt; /home/linux/log/aria2.log 2\u0026gt;\u0026amp;1 \u0026amp; # 监控文件变化 while(true) do sudo -u www-data php /var/www/nextcloud/occ files:scan --all sleep 60 done 1 2 3 4 5 6 # runserver.sh # 删除aria相关的程序 sudo kill -9 $(ps -ef|grep startserver|gawk \u0026#39;$0 !~/grep/ {print $2}\u0026#39; |tr -s \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) sudo kill -9 $(ps -ef|grep startaria|gawk \u0026#39;$0 !~/grep/ {print $2}\u0026#39; |tr -s \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) sudo kill -9 $(ps -ef|grep aria2|gawk \u0026#39;$0 !~/grep/ {print $2}\u0026#39; |tr -s \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) sudo nohup bash startserver.sh \u0026gt; /home/linux/log/nextcloud.log 2\u0026gt;\u0026amp;1 \u0026amp; 配置aria2NG 1 2 3 4 5 # 下载aria2ng cd /var/www/ wget https://github.com/mayswind/AriaNg/releases/download/1.2.3/AriaNg-1.2.3.zip mkdir ariang unzip AriaNg-1.2.3.zip 配置apache2网页 1 # 创建/etc/apache2/sites-available/ariang.conf 1 2 3 4 5 6 7 8 9 10 11 Alias /ariang \u0026#34;/var/www/ariang/\u0026#34; \u0026lt;Directory /var/www/ariang/\u0026#34;\u0026gt; Require all granted AllowOverride All Options FollowSymLinks MultiViews \u0026lt;IfModule mod_dav.c\u0026gt; Dav off \u0026lt;/IfModule\u0026gt; \u0026lt;/Directory\u0026gt; 1 # 访问http://host.example.com/ariang Nextcloud镜像安装 创建文件夹nextcloud 1 mkdir nextcloud 创建文件docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 --- version: \u0026#39;2\u0026#39; volumes: nextcloud: db: services: db: image: mariadb restart: always command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW volumes: - db:/var/lib/mysql environment: - MYSQL_ROOT_PASSWORD=root - MYSQL_PASSWORD=passwd - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud app: image: nextcloud restart: always ports: - 8080:80 links: - db volumes: - nextcloud:/var/www/html environment: - MYSQL_PASSWORD=passwd - MYSQL_DATABASE=nextcloud - MYSQL_USER=nextcloud - MYSQL_HOST=db 启动镜像 1 sudo docker-compose up -d 常见问题 apache2解析失败php 重新安装php 1 2 sudo apt-get purge php8.* sudo apt install php apache2提示找不到apache.conf 重新安装apache2 1 2 3 sudo dpkg -P apache2 apt-get remove apache2 apt-get install apache2 ","permalink":"http://www.sivanlaai.top/posts/experience/software/nextcloud/","summary":"title: nextcloud配置 date: 2021-12-08 14:39:24 permalink: /pages/20632c/ categories: 百科 常见问题 tags: nextcloud网盘相关问题 网盘配置 （1）配置环境 Linux + Apache2 + Mysql + Php(LAMP) Example installation on Ubuntu 20.04 LTS — Nextcloud latest Administration Manual latest","title":"nextcloud配置"},{"content":"wordpress permainlink 不生效 1.打开apache2默认配置文件 1 sudo vim /etc/apache2/sites-available/000-default.conf 2.修改内容为如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_http_module modules/mod_proxy_http.so \u0026lt;VirtualHost *:80\u0026gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request\u0026#39;s Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/html \u0026lt;Directory /var/www/html\u0026gt; AllowOverride All Require all granted \u0026lt;/Directory\u0026gt; # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. #LogLevel info ssl:warn ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example the # following line enables the CGI configuration for this host only # after it has been globally disabled with \u0026#34;a2disconf\u0026#34;. #Include conf-available/serve-cgi-bin.conf \u0026lt;/VirtualHost\u0026gt; 3.在/wp-admin/options-permalink.php页面选择-\u0026gt;Permalink structure -\u0026gt; Post name保存生成.hatcess ","permalink":"http://www.sivanlaai.top/posts/experience/software/wordpress/","summary":"wordpress permainlink 不生效 1.打开apache2默认配置文件 1 sudo vim /etc/apache2/sites-available/000-default.conf 2.修改内容为如下 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35","title":"wordpress安装和问题"},{"content":"软件编译和安装 qbittorrent编译安装 安装依赖 1 2 apt-get install build-essential pkg-config automake libtool git apt-get install libboost-dev libboost-system-dev libboost-chrono-dev libboost-random-dev libssl-dev libgeoip-dev 安装libtorrent 1 2 3 4 5 6 7 8 9 git clone https://github.com/arvidn/libtorrent.git #之前系统版本可直接下载源码使用，18.04需修改include/libtorrent/export.hpp替换boost/config/为boost/config/detail/ #https://github.com/arvidn/libtorrent/releases/download/libtorrent-1_0_11/libtorrent-rasterbar-1.0.11.tar.gz cd libtorrent git checkout origin/RC_1_2 ./autotool.sh ./configure CXXFLAGS=-std=c++14 make clean \u0026amp;\u0026amp; make -j$(nproc) make install 安装qbittorrent 1 2 3 4 5 6 7 apt-get install qtbase5-dev qttools5-dev-tools libqt5svg5-dev zlib1g-dev wget https://github.com/qbittorrent/qBittorrent/archive/release-4.2.5 tar zxvf release-4.1.3.tar.gz cd qBittorrent-release-4.1.3/ ./configure --disable-gui make clean \u0026amp;\u0026amp; make -j$(nproc) make install LAMP php7.4安装 Ubuntu 18 安装 1 apt-get install software-properties-common 添加第三方源 1 2 add-apt-repository ppa:ondrej/php apt-get update 安装LAMP环境 1 2 3 4 sudo apt update sudo apt install apache2 mariadb-server libapache2-mod-php7.4 sudo apt install php7.4-gd php7.4-mysql php7.4-curl php7.4-mbstring php7.4-intl sudo apt install php7.4-gmp php7.4-bcmath php-imagick php7.4-xml php7.4-zip LAMP php安装 Ubuntu 22 安装 1 apt-get install software-properties-common 添加第三方源 1 2 add-apt-repository ppa:ondrej/php apt-get update 安装LAMP环境 1 2 3 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade sudo apt install mariadb-server php-gd php-mysql php-fpm \\ php-curl php-mbstring php-intl php-gmp php-bcmath php-xml php-imagick php-zip Neovim 安装 Ubuntu PPA安装 安装依赖软件 1 2 3 sudo apt-get install software-properties-common ## older ubuntu version sudo apt-get install python-software-properties 安装发布版本neovim 1 2 3 sudo add-apt-repository ppa:neovim-ppa/stable sudo apt-get update sudo apt-get install neovim 编译安装 安装编译依赖 1 sudo apt-get install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl doxygen 获取源代码 1 git clone https://github.com/neovim/neovim 编译安装neovim 1 2 3 cd neovim make sudo make install 让neovim支持python和python3 1 2 3 sudo apt-get install python3 python3-pip python-pip -y pip install neovim pip3 install neovim tmux 安装 Ubuntu 编译安装 获取源代码\n1 wget https://github.com/tmux/tmux/releases/download/3.3-rc/tmux-3.3-rc.tar.gz 编译neovim 1 2 3 4 tar -zxvf tmux-3.3-rc.tar.gz cd tmux-3.3-rc make sudo make install transmission 安装 镜像安装 创建文件夹nextcloud 1 mkdir transmission 创建文件docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 --- version: \u0026#34;2.1\u0026#34; services: transmission: image: lscr.io/linuxserver/transmission container_name: transmission environment: - PUID=1000 - PGID=1000 - TZ=Europe/London - TRANSMISSION_WEB_HOME=/combustion-release/ #optional - USER=transmission #optional - PASS=passwd #optional #- WHITELIST=iplist #optional #- PEERPORT=peerport #optional #- HOST_WHITELIST=dnsnane list #optional volumes: - ./config:/config - ./downloads:/downloads - ./watch:/watch ports: - 9091:9091 - 51413:51413 - 51413:51413/udp restart: unless-stopped 启动镜像 1 sudo docker-compose up -d apt安装 安装 1 sudo apt update install transmission-daemon 修改配置文件 1 2 3 4 ... \u0026#34;rpc-whitelist\u0026#34;: \u0026#34;*\u0026#34;, \u0026#34;rpc-whitelist-enabled\u0026#34;: true, ... web-ui安装 安装 1 2 wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh bash install-tr-control-cn.sh Selenium配置 [Webdriver驱动列表](Install browser drivers | Selenium) Windows 下载驱动\n[Edge Webdriver](Microsoft Edge WebDriver - Microsoft Edge Developer) Chrome Webdriver 解压驱动到程序目录\n1 2 mkdir selenium_test cd selenium_test 启动镜像 1 sudo docker-compose up -d Jellyfin 安装 并启用硬件加速 apt安装 所有的Ubuntu发行版本 https://repo.jellyfin.org/releases/server/ubuntu/versions 查看当前的GPU设备 1 lspci -k | grep -A 2 -i \u0026#34;VGA\u0026#34; 禁用nouveau 1 2 3 4 5 6 7 sudo vim /etc/modprobe.d/blacklist_nouveau.conf # 添加 blacklist nouveau options nouveau modeset=0 sudo reboot 搜索Nvidia显卡驱动 1 sudo ubuntu-drivers devices 1 2 3 4 5 6 7 8 9 10 11 # 安装推荐的驱动 modalias : pci:v000010DEd00000FC2sv00001462sd0000275Cbc03sc00i00 vendor : NVIDIA Corporation model : GK107 [GeForce GT 630 OEM] driver : nvidia-driver-450-server - distro non-free #server版本的驱动 driver : nvidia-driver-470-server - distro non-free driver : nvidia-340 - distro non-free driver : nvidia-driver-418-server - distro non-free driver : nvidia-driver-470 - distro non-free recommended #gui版本的驱动 driver : nvidia-driver-390 - distro non-free driver : xserver-xorg-video-nouveau - distro free builtin 安装驱动 1 2 sudo apt install nvidia-driver-470-server #重启然后在jellyfin中设置Nvidia解码 镜像安装 创建文件夹jellyfin 1 mkdir jellyfin 创建文件docker-compose.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 --- version: \u0026#34;3.5\u0026#34; services: jellyfin: image: nyanmisaka/jellyfin:latest container_name: jellyfin user: 1000:1000 network_mode: \u0026#34;host\u0026#34; volumes: - ./config:/config - ./cache:/cache - ./media:/media - /path/to/media2:/media2:ro restart: \u0026#34;unless-stopped\u0026#34; 启动镜像 1 2 sudo docker-compose up -d # 这种版本可能会导致apache2在转发端口的时候web存在不能访问服务器 Nvidia驱动安装 Ubuntu 查看驱动 1 sudo dpkg --list | grep nvidia-* 卸载驱动 1 2 3 4 sudo /usr/bin/nvidia-uninstall sudo apt-get --purge remove nvidia-* sudo apt-get purge nvidia* sudo apt-get purge libnvidia* 检查驱动是否卸载 1 2 sudo dpkg --list | grep nvidia-* # 无任何输出 安装驱动 1 2 sudo ubuntu-drivers devices sudo apt install nvidia-driver-470-server ","permalink":"http://www.sivanlaai.top/posts/experience/software/compile_and_install/","summary":"软件编译和安装 qbittorrent编译安装 安装依赖 1 2 apt-get install build-essential pkg-config automake libtool git apt-get install libboost-dev libboost-system-dev libboost-chrono-dev libboost-random-dev libssl-dev libgeoip-dev 安装libtorrent 1 2 3 4 5 6 7 8 9 git clone https://github.com/arvidn/libtorrent.git #之前","title":"软件编译和安装"},{"content":"apache常见问题 配置apache2文件简单服务器 打开配置文件\n1 sudo vim /etc/apache2/sites-available/000-default.conf 修改内容为\n1 2 3 4 5 6 Alias /e6ecni3_Sivan \u0026#34;/var/www/html/\u0026#34; \u0026lt;Directory /var/www/html/\u0026#34;\u0026gt; Require all granted AllowOverride All Options FollowSymLinks MultiViews \u0026lt;/Directory\u0026gt; 删除/var/www/html\n1 2 sudo rm -rf /var/www/html #软链html为你的共享文件目录 访问apache2服务器默认指向index.php 1 删除浏览器的访问记录就可以 在apache2中配置反向代理 反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源。同时，用户不需要知道目标服务器的地址，也无须在用户端作任何设定。反向代理服务器通常可用来作为Web加速，即使用反向代理作为Web服务器的前置机来降低网络和服务器的负载，提高访问效率。 其作用如下表示： 开启模块支持 1 2 3 4 5 sudo a2enmod rewrite sudo a2enmod lbmethod_byrequests sudo a2enmod proxy_balancer sudo a2enmod proxy_http sudo a2enmod proxy 添加反向代理设置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #sites-available/example.conf LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_http_module modules/mod_proxy_http.so \u0026lt;VirtualHost *:80\u0026gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request\u0026#39;s Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. #ServerName www.example.com ServerAdmin sivan@localhost # Para qbittorrent RewriteEngine on RewriteRule ^/torrent$ \u0026#34;/torrent/$1\u0026#34; [R] ProxyPass /torrent/ http://127.0.0.1:8080/ ProxyPassReverse /torrent/ http://127.0.0.1:8080/ # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. #LogLevel info ssl:warn ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example the # following line enables the CGI configuration for this host only # after it has been globally disabled with \u0026#34;a2disconf\u0026#34;. #Include conf-available/serve-cgi-bin.conf \u0026lt;/VirtualHost\u0026gt; # vim: syntax=apache ts=4 sw=4 sts=4 sr noet 启动服务 1 2 sudo a2ensite example.conf sudo service apache2 restart Nginx常见问题 配置nginx反向代理和重定向 打开配置文件 1 sudo vim /etc/nginx/conf.d/jellyfin.conf 添加如下内容（访问http://host/video/.html 可反向代理重定向到http://host:8096/.html）： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 set $jellyfin 127.0.0.1; location /video { # Proxy main Jellyfin traffic rewrite ^/video/(.*)$ /$1 break; proxy_pass http://$jellyfin:8096; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; # Disable buffering when the nginx proxy gets very resource heavy upon streaming proxy_buffering off; } # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/ location = /video/web/ { # Proxy main Jellyfin traffic proxy_pass http://$jellyfin:8096/web/index.html; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; } ","permalink":"http://www.sivanlaai.top/posts/experience/software/web/","summary":"apache常见问题 配置apache2文件简单服务器 打开配置文件 1 sudo vim /etc/apache2/sites-available/000-default.conf 修改内容为 1 2 3 4 5 6 Alias /e6ecni3_Sivan \u0026#34;/var/www/html/\u0026#34; \u0026lt;Directory /var/www/html/\u0026#34;\u0026gt; Require all granted AllowOverride All Options FollowSymLinks MultiViews \u0026lt;/Directory\u0026gt; 删除/var/ww","title":"Web容器"},{"content":"添加功能： 1.文件管理：插件NerdTree 打开文件管理：Crtl + N 退出文件管理：Crtl + C 2.跳转功能：Ctags\\pygments\\gtags 跳转到定义：Crtl + ] 后退：Crtl + T Ctrl+\\ c Find functions calling this function Ctrl+\\ d Find functions called by this function Ctrl+\\ e Find this egrep pattern Ctrl+\\ f Find this file Ctrl+\\ g Find this definition Ctrl+\\ i Find files #including this file Ctrl+\\ s Find this C symbol Ctrl+\\ t Find this text string 3.任意跳转功能，主要是和前一个功能进行补充；JumpAny 跳转到定义：cursor移动到关键词 , + j 4.搜索功能：LeaderF 打开搜索：, + f 结果上翻：Crtl + k 结果下翻：Crtl + j 打开：Enter 帮助：Tab 5.代码补全：Coc.nvim 打开搜索：在对应的关键词后面按tab会提示 结果下翻：提示后按Tab可以顺序下翻，或者用Crtl + n 结果上翻：提示后Crtl + p 选择：Enter 6.代码错误修正：Coc.nvim 7.单终端编译和写代码，不用Crtl-z切后台编译，直接借助tmux和vimux插件实现在一个界面写代码和编译 创建tmux：tmux session -t mytmux 分屏tmux：打开vim后输入, + v + p，输入相关的运行命令便可打开命令行 运行上一次的命令：需要先运行在, + v + p，然后在, + v + l便可以运行最后一次的命令 切换tmux：按Crtl + b 再按 hjkl 任意，例如向下切换则Crtl + b，然后按j，便可向下切换tmux 8.更加强大的终端zsh和on-my-zsh管理，支持主题和插件 9.vim支持Latex保存自动编译，编译实时显示（Windows Vim Latex Live Preview） 编译latex：,lc 查看latex：,lv 删除latex相关缓存文件：,lr 效果预览 Vim or Neovim Ubuntu安装方式 1 2 3 4 5 # 可在内部选择对应的版本 git clone https://github.com/SivanLaai/vimrc.git cd vimrc ./install.sh #TODO: 安装完成记得进入vim更新插件 vim-gui windows 1.下载安装vim-gui gVim 下载python编译版本gvim Neovim 下载python编译版本neovim 配置路径D:\\Program Files\\Neovim\\bin为系统环境变量 2.安装对应版本的Python GVim查看对应版本的Python 查看相关版本的python下载安装： 下载Python 3.安装字体 下载字体 DejaVu Sans Mono for Powerline 4.安装universal-ctags/pygments 和 gtags （1）universal-ctags 下载universal-ctags 将ctags拷贝到安装路径，如D:\\Program Files\\ctags 配置路径D:\\Program Files\\ctags为系统环境变量 （2）pygments（主要作用是配合ctags来查找引用） 1 pip install pygments （3）gtags 下载gtags 将gtags拷贝到安装路径，如D:\\Program Files\\gtags 配置路径D:\\Program Files\\gtags为系统环境变量 5.安装ripgrep 下载ripgrep 将ripgrep程序拷贝到安装路径，如D:\\Program Files\\ripgrep 配置路径D:\\Program Files\\ripgrep为系统环境变量 6.安装Latex 下载miktex 安装mitex并更新 7.安装Okular 下载Okular 将Okular程序安装到路径，如D:\\Program Files\\Okular 配置路径D:\\Program Files\\Okular为系统环境变量 8.安装MSYS2 下载MSYS2 将MSYS2程序安装到路径，如D:\\Program Files\\MSYS2 配置路径D:\\Program Files\\MSYS2\\usr\\bin为系统环境变量 配置路径D:\\Program Files\\MSYS2\\clang4\\bin为系统环境变量 安装clang64 1 2 3 4 5 6 # 更新软件库 pacman -Syu # 更新核心软件 pacman -Su # 安装Clang64编译环境 pacman -S --needed base-devel mingw-w64-clang-x86_64-toolchain 下载git 将git程序安装到路径，如D:\\Program Files\\git 配置路径D:\\Program Files\\git\\bin为系统环境变量 git中文显示错误修正 1 git config --global core.quotepath false 想卸载某个包的话 1 pacman -Rs mingw-w64-clang-x86_64-toolchain 9.配置vim-format依赖 1 2 3 4 5 #C++ 通过Clang64已经成功支持 #Python pip install --upgrade autopep8 #html\\css\\js npm install -g js-beautify 10.复制配置文件 gVim 1 2 3 4 5 6 cp -rf gvim/_vimrc $vim/_vimrc cp -rf gvim/autoload vimfile - NeoVim-qt cp -rf neovim-qt/* ~/AppData/Local/nvim # Solarized Dark 主题复制 cp -rf gvim/colors vimfile 11.配置vim-gui 1 :PlugInstall #待安装完成 Xshell 护眼主题 Eyes Protection 安装方式 在Xshell 配色方案里导入 本项目中的xcs文件 界面预览 Solarized Dark Solarized Light ","permalink":"http://www.sivanlaai.top/posts/projects/vim/","summary":"添加功能： 1.文件管理：插件NerdTree 打开文件管理：Crtl + N 退出文件管理：Crtl + C 2.跳转功能：Ctags\\pygments\\","title":"Vim/Neovim-Tmux 一键安装轻量级工作站"},{"content":"docker教程 docker安装 卸载老版本docker 1 sudo apt-get remove docker docker-engine docker.io containerd runc 设置apt仓库 1.更新apt包索引并且安装相关依赖允许apt使用https更新 1 2 3 4 5 6 7 sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release 2.增加Docker官方GPG Key 1 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg 3.设置apt docker稳定仓库设置 1 2 3 echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null 安装Docker引擎 1.更新apt包索引并且安装Docker引擎 1 2 sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io 2.验证docker是否成功安装 1 sudo docker run hello-world 3.设置apt docker稳定仓库设置 1 2 3 echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null 参考文档 Install Docker Engine on Ubuntu | Docker Documentation\nDocker Compose安装 Linux 安装Docker Compose 1.下载docker compose可执行文件 1 sudo curl -L \u0026#34;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\u0026#34; -o /usr/local/bin/docker-compose 2.设置可执行权限 1 sudo chmod +x /usr/local/bin/docker-compose qBittorrent Docker运行 Docker Compose 配置qBittorrent 新建项目 1.进入home目录，新建项目qBittorrent 1 2 3 cd ~ mkdir qBittorrent cd qBittorrent 2.进入项目文件目录，新建配置文件docker-compose.yml，配置下载端口，qBittorrent相关目录 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 version: \u0026#34;3\u0026#34; services: qbittorrent: image: emmercm/qbittorrent:latest restart: unless-stopped ports: - 8080:8080 - 5463:5463/tcp - 5463:5463/udp volumes: - ./config:/config - ./data:/data - ./downloads:/downloads - ./incomplete:/incomplete 运行项目 1.下载并创建镜像\n1 docker-compose up 2.运行镜像 1 docker-compose start ","permalink":"http://www.sivanlaai.top/posts/experience/software/docker/","summary":"docker教程 docker安装 卸载老版本docker 1 sudo apt-get remove docker docker-engine docker.io containerd runc 设置apt仓库 1.更新apt包索引并且安装相关依赖允许apt使用ht","title":"docker教程"},{"content":"你我都是深夜里的尘埃，虚无飘渺，明明很近却又抓不到，握不住，我抓住你却犹如空气般跑开。纵使在同一个时空里，没有足够的条件使这两粒尘埃相互依靠，相互依偎，或者来自于尘埃家族式的成长历程不一样，年长的尘埃没能够找到适合这块新尘埃所需要的一切条件，年长的尘埃拖着贫瘠的本体，在这个空间中苟延残喘，完成来自于尘埃家族的安排。\n经过努力这两粒尘埃在时空中又在次交织在一起，至那以后年长的尘埃不敢对新尘埃有过多的奢望，空气似乎是恢复了正轨，但新尘埃每天也面临了更多的挑战，来自于尘埃的另眼相看，苦口婆心，来自于年长尘埃的不闻不问，新尘埃终究在撺够了失望后选择了最为稳妥的方案，然而此时的年长尘埃已经无法在拉住新尘埃的身躯，这次交织到飘散是短暂的也是注定的。 这就是两个尘埃短暂的故事。\n","permalink":"http://www.sivanlaai.top/posts/misc/random_note/","summary":"你我都是深夜里的尘埃，虚无飘渺，明明很近却又抓不到，握不住，我抓住你却犹如空气般跑开。纵使在同一个时空里，没有足够的条件使这两粒尘埃相互依靠","title":"随笔"},{"content":"mysql数据库 mysql忘记密码 （1）修改配置文件免密 1 sudo vim /etc/mysql/my.cnf 1 2 [mysqld] skip-grant-tables （2）重启mysql 1 sudo service mysql restart （3）修改初始密码 1 2 3 mysql -u root use mysql; update user set password=password(\u0026#34;test@123\u0026#34;) where user=\u0026#34;root\u0026#34;; mysql root帐号不能登录 （1）修改配置文件免密 看mysql忘记密码的第一步\n（2）更新ip访问权限 1 2 3 4 flush privileges; alter user \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; identified by \u0026#39;test@123\u0026#39;; flush privileges; commit; mysql 创建数据库 1 CREATE DATABASE IF NOT EXISTS nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci; mysql 创建用户开启外网权限 打开配置文件 1 sudo vim /etc/mysql/my.cnf 修改绑定ip 1 2 [mysqld] bind-address=0.0.0.0 具体命令 1 2 3 4 CREATE USER \u0026#39;username\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;password\u0026#39;; # 所有的数据库都可以在外网访问 GRANT ALL PRIVILEGES ON *.* TO \u0026#39;username\u0026#39;@\u0026#39;%\u0026#39;; FLUSH PRIVILEGES; ","permalink":"http://www.sivanlaai.top/posts/experience/software/mysql/","summary":"mysql数据库 mysql忘记密码 （1）修改配置文件免密 1 sudo vim /etc/mysql/my.cnf 1 2 [mysqld] skip-grant-tables （2）重启mysql 1 sudo service mysql restart （3）修改初始密码 1 2 3 mysql -u root use mysql; update user","title":"数据库配置"},{"content":"1.ModuleNotFoundError: No module named \u0026lsquo;_lzma\u0026rsquo; Ubuntu （1）安装依赖 1 2 apt-get install liblzma-dev -y pip install backports.lzma （2）打开lzma.py 1 vim ~/a/b/python3.7/lzma.py （3）修改代码 1 2 3 4 5 6 7 8 9 10 11 #修改前 from _lzma import * from _lzma import _encode_filter_properties, _decode_filter_properties #修改后 try: from _lzma import * from _lzma import _encode_filter_properties, _decode_filter_properties except ImportError: from backports.lzma import * from backports.lzma import _encode_filter_properties, _decode_filter_properties ","permalink":"http://www.sivanlaai.top/posts/experience/software/pytorch/","summary":"1.ModuleNotFoundError: No module named \u0026lsquo;_lzma\u0026rsquo; Ubuntu （1）安装依赖 1 2 apt-get install liblzma-dev -y pip install backports.lzma （2）打开lzma.py 1 vim ~/a/b/python3.7/lzma.py （3）修改代码 1 2 3 4 5 6 7 8 9 10 11 #修改前 from _lzma import * from _lzma import _encode_filter_properties, _decode_filter_properties #修","title":"pytorch使用问题"},{"content":"安装Latex Windows WSL （1）安装WSL 配置WSL\n1 wsl --install 安装WSL-Ubuntu 18.04\n1 wsl --install -d Ubuntu-18.04 #等待安装完成 启动Ubuntu\n1 wsl bash （2）安装TexLive 在线安装\n1 sudo apt install texlive-full 装载Tex的ISO镜像安装\n1 2 3 sudo mkdir /mnt/img sudo mount -t drvfs G: /mnt/img sudo mnt/img/install-tl （3）配置环境变量使得powershell上可以直接使用 1 sudo /usr/local/texlive/2020/bin/x86_64-linux/tlmgr path add （4）配置WSL使用windows字体 1 sudo apt install fontconfig 创建/etc/fonts/local.conf\n1 2 3 4 5 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE fontconfig SYSTEM \u0026#34;fonts.dtd\u0026#34;\u0026gt; \u0026lt;fontconfig\u0026gt; \u0026lt;dir\u0026gt;/mnt/c/Windows/Fonts\u0026lt;/dir\u0026gt; \u0026lt;/fontconfig\u0026gt; ","permalink":"http://www.sivanlaai.top/posts/experience/software/latex/","summary":"安装Latex Windows WSL （1）安装WSL 配置WSL 1 wsl --install 安装WSL-Ubuntu 18.04 1 wsl --install -d Ubuntu-18.04 #等待安装完成 启动Ubuntu 1 wsl bash （2）安装TexL","title":"安装latex"},{"content":"Mongodb安装 （1）导入公匙 1 wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - （2）创建mongodb列表文件 1 echo \u0026#34;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/5.0 multiverse\u0026#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list （3）重新加载包数据 1 sudo apt-get update （4）重新加载包数据 1 sudo apt-get install -y mongodb-org=5.0.2 mongodb-org-database=5.0.2 mongodb-org-server=5.0.2 mongodb-org-shell=5.0.2 mongodb-org-mongos=5.0.2 mongodb-org-tools=5.0.2 （5）服务启动 1 sudo systemctl start mongod Mongodb配置修改 （1）打开配置 1 sudo vim /etc/mongod.conf （2）修改配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # mongod.conf # for documentation of all options, see: # http://docs.mongodb.org/manual/reference/configuration-options/ # Where and how to store data. storage: dbPath: /var/lib/mongodb journal: enabled: true # engine: # wiredTiger: # where to write logging data. systemLog: destination: file logAppend: true path: /var/log/mongodb/mongod.log # network interfaces net: port: 10095 bindIp: 0.0.0.0 # how the process runs processManagement: timeZoneInfo: /usr/share/zoneinfo # 登录是否需要密码 #security: # authorization: enabled #operationProfiling: #replication: #sharding: ## Enterprise-Only Options: Mongodb添加用户 （1）连接Mongodb 1 mongo mongodb://127.0.0.1:10095 （2）创建普通用户 1 2 3 4 5 6 7 8 use Production db.createUser( { user: \u0026#34;production\u0026#34;, pwd: \u0026#34;production@123\u0026#34;, // passwordPrompt() Or \u0026#34;\u0026lt;cleartext password\u0026gt;\u0026#34; roles: [ \u0026#34;readWrite\u0026#34;, \u0026#34;dbAdmin\u0026#34; ] } ) （3）创建超级用户 1 2 3 4 5 6 7 8 use admin db.createUser( { user: \u0026#34;mongoAdmin\u0026#34;, pwd: passwordPrompt(), // passwordPrompt() Or \u0026#34;\u0026lt;cleartext password\u0026gt;\u0026#34; roles: [ \u0026#34;readWriteAnyDatabase\u0026#34;, \u0026#34;userAdminAnyDatabase\u0026#34;, \u0026#34;dbAdminAnyDatabase\u0026#34;] } ) （4）登录 1 db.auth(\u0026#34;production\u0026#34;) Mongodb更新用户权限 （1）连接Mongodb 1 mongo mongodb://127.0.0.1:10095 （2）更新用户权限 1 2 3 4 use Production # 更新用户权限 db.updateUser(\u0026#34;production\u0026#34;,{roles : [{\u0026#34;role\u0026#34; : \u0026#34;readWriteAnyDatabase\u0026#34;,\u0026#34;db\u0026#34; : \u0026#34;Stock\u0026#34;},{\u0026#34;role\u0026#34; : \u0026#34;dbAdminAnyDatabase\u0026#34;,\u0026#34;db\u0026#34; : \u0026#34;Stock\u0026#34;}]}) readWriteAnyDatabase ","permalink":"http://www.sivanlaai.top/posts/experience/software/mongodb/","summary":"Mongodb安装 （1）导入公匙 1 wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - （2）创建mongodb列表文件 1 echo \u0026#34;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/5.0 multiverse\u0026#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list （3）重新加载包数据 1 sudo apt-get update （","title":"安装Mongodb"},{"content":"7.apt重新配置 （1）修复Python 当前的系统python如果有错误了，也需要一起修复，这个版本的python不能随便的更改，需要从一个正常的linux系统下把python复制出来。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # 版本正常的python3.6 mkdir python3.6 cd python3.6 mkdir python3.6-lib mkdir python3-lib mkdir x86_64-linux-gnu cp -rf /usr/bin/python3.6* ~/python3.6 cp -rf /usr/lib/python3.6/* ~/python3.6/python3.6-lib cp -rf /usr/lib/python3/* ~/python3.6/python3-lib cp -rf /usr/lib/x86_64-linux-gnu/*apt* ~/x86_64-linux-gnu/ cd .. tar zcvf python3.6.tar.gz python3.6 scp python3.6.tar.gz user@localhost:~ # 待修复的linux主机 tar zxvf python3.6.tar.gz cd python3.6 sudo cp -rf python3.6 /usr/bin sudo cp -rf python3.6m /usr/bin sudo cp -rf python3.6-lib/* /usr/lib/python3.6 sudo cp -rf python3-lib/* /usr/lib/python3 （2）修复动态库 1 dpkg -l apt 其中版本是2.0.2ubuntu0.2，下载对应的安装包并安装：\n1 2 3 4 5 6 7 # 安装apt wget http://mirrors.edge.kernel.org/ubuntu/pool/main/a/apt/apt_2.0.2ubuntu0.2_amd64.deb sudo dpkg -i apt_2.0.2ubuntu0.2_amd64.deb # 有时候提示缺少libapt-pkg6.0.so # 安装apt-pkg依赖 wget http://mirrors.edge.kernel.org/ubuntu/pool/main/a/apt/libapt-pkg6.0_2.0.2ubuntu0.2_amd64.deb sudo dpkg -i libapt-pkg6.0_2.0.2ubuntu0.2_amd64.deb （3）测试apt 1 sudo apt update ","permalink":"http://www.sivanlaai.top/posts/experience/system/apt/","summary":"7.apt重新配置 （1）修复Python 当前的系统python如果有错误了，也需要一起修复，这个版本的python不能随便的更改，需要从一个","title":"apt重新安装配置"},{"content":"Python 相关问题 Python ImportError: No module named _bz2 1 2 sudo apt-get install libbz2-dev #重新编译Python ImportError: Missing optional dependency \u0026lsquo;openpyxl\u0026rsquo; 1 2 pip install openpyxl #重新编译Python 重置linux的python 1 2 unset PYTHONHOME unset PYTHONPATH 安装pip 下载get-pip.py 1 wget https://bootstrap.pypa.io/get-pip.py 安装pip 1 python get-pip.py ","permalink":"http://www.sivanlaai.top/posts/experience/software/python/","summary":"Python 相关问题 Python ImportError: No module named _bz2 1 2 sudo apt-get install libbz2-dev #重新编译Python ImportError: Missing optional dependency \u0026lsquo;openpyxl\u0026rsquo; 1 2 pip install openpyxl #重新编译Python 重置linux的python 1 2 unset PYTHONHOME unset PYTHONPATH 安","title":"python安装和配置"},{"content":"Linux /usr/bin/dpkg returned an error code (1) 解决dpkg错误 1 2 3 cd /var/lib/dpkg sudo mv info info.baksudo mkdir info 添加用户名和添加sudo 添加用户名 1 sudo useradd -m -d /data/username -s /bin/zsh username 修改密码 1 sudo passwd username 添加sudoers 1 2 3 vi /etc/sudoers #添加用户 username ALL=(ALL:ALL) ALL Ubuntu安装Linux开发包 1 sudo apt-get install build-essential 根据关键字把进程杀掉 1 kill -9 $(ps -ef|grep keyword|gawk \u0026#39;$0 !~/grep/ {print $2}\u0026#39; |tr -s \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) linux永久挂载硬盘 查看当前的硬盘状态，可以知道硬盘的分区 1 sudo fdisk -l 修改配置 1 sudo vim /etc/fstab 1 2 # 添加如下信息挂载硬盘 /dev/sdb1 /mnt/data ntfs-3g defaults 0 0 挂载硬盘 1 2 mkdir -p /mnt/data sudo mount -a linux开机自启动并服务化 Ubuntu 开机启动 服务化（以qbittorrent服务化为例） 不要在后面添加#的注释，不然会导致未知错误\n配置文件/lib/systemd/system/qbittorrent.service 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [Unit] Description=qbittorrent-nox service #服务描述 After=network.target [Service] User=root #用户root Group=root #用户组root UMask=0000 #权限777 Type=forking #ExecStartPre=-cd /home/\u0026lt;span class=\u0026#34;hljs-built_in\u0026#34;\u0026gt;test\u0026lt;/span\u0026gt;/ #启动前执行 #WorkingDirectory=/home/\u0026lt;span class=\u0026#34;hljs-built_in\u0026#34;\u0026gt;test\u0026lt;/span\u0026gt;/ #工作目录 ExecStart=/usr/bin/qbittorrent-nox #启动时执行 ExecReload=/bin/kill -SIGHUP $MAINPID #重启时执行 ExecStop=/bin/kill -SIGINT $MAINPID #停止时执行 [Install] WantedBy=multi-user.target graphical.target 服务常用命令集合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # 开机启动 systemctl enable qbittorrent # 关闭开机启动 systemctl disable qbittorrent # 启动服务 systemctl start qbittorrent # 停止服务 systemctl stop qbittorrent # 重启服务 systemctl restart qbittorrent # 查看服务状态 systemctl status qbittorrent systemctl is-active sshd.service # 结束服务进程(服务无法停止时) systemctl kill qbittorrent linux安装常见中文字体 Ubuntu 打包Windows字体 1 2 3 mkdir -p winfonts cp -rf C:/Windows/Fonts winfonts 压缩winfonts为winfonts.zip 上传到linux 1 scp winfonts.zip username@host:~ 安装字体 1 2 3 4 unzip -n -d /usr/share/fonts winfonts.zip sudo mkfontscale sudo mkfontdir sudo fc-cache -f -v 检查中文字体 1 fc-list :lang=zh Windows 给Neovim添加右键文件夹、文件以及右键空白区域三种菜单 右键文件夹 添加如下值 1 计算机\\HKEY_CLASSES_ROOT\\Directory\\shell\\使用Neovim打开 添加Icon 在使用Neovim打开空白处添加字符串项Icon设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; 添加打开命令 在使用Neovim打开添加子项command，设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; -qwindowgeometry 1310x650+20+20 \u0026quot;%1\u0026quot; 右键文件 添加如下值 1 计算机\\HKEY_CLASSES_ROOT\\*\\shell\\使用Neovim打开 添加Icon 在使用Neovim打开空白处添加字符串项Icon设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; 添加打开命令 在使用Neovim打开添加子项command，设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; -qwindowgeometry 1310x650+20+20 \u0026quot;%1\u0026quot; 右键文件 添加如下值 1 计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\使用Neovim打开 添加Icon 在使用Neovim打开空白处添加字符串项Icon设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; 添加打开命令 在使用Neovim打开添加子项command，设置值为\u0026quot;D:\\Program Files\\Neovim\\bin\\gnvim.exe\u0026quot; 参考文档 使用注册表编辑win10鼠标右键菜单，详细解释（右键文件夹、文件以及右键空白区域下三种情况）_鸾镜朱颜暗换的博客-CSDN博客_桌面右键菜单注册表 contextmenu - How add context menu item to Windows Explorer for folders - Stack Overflow ","permalink":"http://www.sivanlaai.top/posts/experience/system/setting/","summary":"Linux /usr/bin/dpkg returned an error code (1) 解决dpkg错误 1 2 3 cd /var/lib/dpkg sudo mv info info.baksudo mkdir info 添加用户名和添加sudo 添加用户名 1 sudo useradd -m -d /data/username -s /bin/zsh username 修改密码 1 sudo passwd username 添加sudoers 1","title":"系统配置和问题"},{"content":"1.安装selenium chrome安装 1 2 3 4 sudo apt-get install libxss1 libappindicator1 libindicator7 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i ./google-chrome*.deb sudo apt-get install -f 配置chromedriver （1）下载驱动 去官网下载：http://chromedriver.storage.googleapis.com/index.html 点击 （2）安装驱动 复制到对应的目录运行\n配置selenium 1 pip install selenium 2.安装uwsgi 配置文件uwsgi.ini 1 2 3 4 5 6 7 8 9 10 #uwsgi.ini [uwsgi] http = 0.0.0.0:8010 chdir = /home/jianli/resume_service/services pythonpath = /home/jianli/venv/bin/python wsgi-file = resume_parser.py buffer-size = 40960 callable = app processes = 1 stats = 127.0.0.1:9191 安装和运行uwsgi 1 2 pip install uwsgi uwsgi uwsgi.ini 3.安装supervisor 配置supervisor 1 2 3 4 http://supervisord.org/installing.html pip install supervisor echo_supervisord_conf \u0026gt; supervisord.conf supervisord -c supervisor.conf 启动停止supervisor 1 2 3 supervisorctl update 重新加载配置 supervisorctl reload 重新启动所有程序 supervisorctl status 查看状态 supervisor问题 1.supervisorctl出现http://localhost:9001 refused connection 设置serverurl：\n1 2 3 4 5 6 7 [supervisorctl] serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL for a unix socket ;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket ;username=chris ; should be same as http_username if set ;password=123 ; should be same as http_password if set ;prompt=mysupervisor ; cmd line prompt (default \u0026#34;supervisor\u0026#34;) ;history_file=~/.sc_history ; use readline history if availabl 2.supervisord配置uwsgi后，调用接口会启动新的服务 重新设置uwsgi如下：\n1 2 3 4 5 6 7 8 [uwsgi] http = 0.0.0.0:8010 virtualenv = /home/jianli/venv wsgi-file = /home/jianli/resume_service/services/resume_parser.py buffer-size = 40960 callable = app processes = 1 thread = 1 4.安装libreoffice 下载安装 1 wget https://mirrors.cloud.tencent.com/libreoffice/libreoffice/stable/7.1.5/deb/x86_64/LibreOffice_7.1.5_Linux_x86-64_deb.tar.gz (安装说明)[https://zh-cn.libreoffice.org/get-help/install-howto/]\n字体安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-serif/SubsetOTF/SourceHanSerifCN.zip wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Bold.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-ExtraLight.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Heavy.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Light.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Medium.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Normal.otf wget https://mirrors.tuna.tsinghua.edu.cn/adobe-fonts/source-han-sans/SubsetOTF/CN/SourceHanSansCN-Regular.otf unzip SourceHanSerifCN.zip mv SourceHanSerifCN SourceHan mv *.otf SourceHan sudo mv SourceHan /usr/share/fonts mkfontscale fc-cache -fv # 如果提示 fc-cache: command not found # 在Ubuntu下运行如下命令 # sudo apt-get install fontconfig # 在cent os下运行如下命令 # yum install fontconfig ","permalink":"http://www.sivanlaai.top/posts/projects/resume_parser/","summary":"1.安装selenium chrome安装 1 2 3 4 sudo apt-get install libxss1 libappindicator1 libindicator7 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i ./google-chrome*.deb sudo apt-get install -f 配置chromedriver （1）下载驱动 去官网下载：htt","title":"简历解析软件安装"},{"content":"Ubuntu （1）查看ufw信息 1 sudo ufw status （2）激活ufw 1 sudo ufw enable （3）阻止/允许IP 1 2 3 4 # 允许IP sudo ufw allow from 203.0.113.101 # 阻止IP sudo ufw deny from 203.0.113.100 （3）阻止/允许port 1 2 3 4 5 6 7 8 # 允许外部访问端口8080 sudo ufw allow 8080 # 允许某ip访问端口8080 sudo ufw allow from 203.0.113.101 to any port 8080 # 阻止外部访问端口8080 sudo ufw disable 8080 # 阻止某ip访问端口8080 sudo ufw deny from 203.0.113.101 to any port 8080 （4）阻止/允许ssh 1 2 3 4 # 允许 sudo ufw allow OpenSSH # 阻止 sudo ufw disable OpenSSH （5）查看支持的APP，并阻止/允许 1 sudo ufw app list | grep Nginx 1 2 3 4 #Output Nginx Full Nginx HTTP Nginx HTTPS 删除NginxFull\n1 2 3 4 #允许 sudo ufw allow \u0026#34;Nginx Full\u0026#34; #阻止 sudo ufw deny \u0026#34;Nginx Full\u0026#34; （6）删除规则 先查看规则\n1 sudo ufw status 选择对应的规则删除，例如第二个规则\n1 sudo ufw delete 2 直接根据规则来删除\n1 2 sudo ufw allow from 203.0.113.101 to any port 8080 sudo ufw delete allow from 203.0.113.101 to any port 8080 ","permalink":"http://www.sivanlaai.top/posts/experience/system/firewall/","summary":"Ubuntu （1）查看ufw信息 1 sudo ufw status （2）激活ufw 1 sudo ufw enable （3）阻止/允许IP 1 2 3 4 # 允许IP sudo ufw allow from 203.0.113.101 # 阻止IP sudo ufw deny from 203.0.113.100 （3）阻止/允许p","title":"配置防火墙"},{"content":"📚Blog Hi，你好这是我的个人网站。\n🐼Me CS博士在读。\n技能 熟悉常见前端技术的使用，如vue/nuxt的使用 使用过C++/Python参与项目开发 博士领域是机器学习 ✉️ 联系 WeChat or QQ: 574855297 Email: 574855297@qq.com GitHub: https://github.com/SivanLaai ","permalink":"http://www.sivanlaai.top/about/","summary":"📚Blog Hi，你好这是我的个人网站。 🐼Me CS博士在读。 技能 熟悉常见前端技术的使用，如vue/nuxt的使用 使用过C++/Python参与","title":"关于"},{"content":"更新历史 2021-08-01 1.修复九宫拼音不支持简拼的情况，如输入xqw不显示结果。 2.四叶草拼音去除25258个重复的词组，只保留最高频次的词组 1 2 3 ./Clover四叶草拼音/clover.phrase.dict.yaml:成事在人 cheng shi zai ren 22846 ./Clover四叶草拼音/THUOCL_chengyu.dict.yaml:成事在人 cheng shi zai ren 21 如上所示，成事在人，在两个字典中都有频次，只保留clover.phrase.dict.yaml中22846频次的词组 3.更新四叶草拼音拼音错误，例如反弹拼音为fandan，错误修复来源@wisim，感谢@spphinslove的反馈 4.四叶草拼音-汉字帧-拼音错误修改，把帧错误拼音zheng相关的词组全部修改为帧zhen 修改费时费力，不易，请大家多多支持，点击支持。 2021-07-29 1.添加九宫格支持隐藏 2.添加常用功能说明 2021-06-27 1.更新同文3.2.0支持 2.修复小鹤双拼简繁转换问题 3.自然码支持简繁转换问题 注：简繁转换属于opencc的内容，和同文没有关系，odc2文件是opencc的生成结果。\n2021-06-23 1.增加自然码双拼，没有辅助码 2021-06-03 1.修正郑码字典显示错误https://github.com/SivanLaai/rime_pure/issues/25 2.默认所有方案不显示字符和表情包 2021-02-07 1.增加qq五笔 2.增加笔画输入@HarryWang29 3.增加九宫格双拼 2020-12-17 1.修正拼音自定义添加造词的功能 2020-12-5（更新，增加徐码、郑码，支持拼音和五笔反查，增加全键盘的符号键盘） 1.优化小鹤双拼方案，双拼支持拼音“`”反查小鹤双拼编码 2.增加徐码 3.徐码支持五笔“`”反查编码 4.徐码支持拼音“`”反查编码 5.增加郑码 6.郑码支持拼音“`”反查编码 7.手机同文，全键盘的符号键盘，调整回车键大小，调整符号键大小，更符合手机端操作 2020-10-31 1.新增双拼输入方案支持-小鹤双拼 2.所有输入方案配置支持繁简转换、中英转换、字符输入、emoji表情、全半角转换 3.调整键盘布局，超大空格，减少误触 4.增加同文优化版皮肤 2020-10-27 1.新增讯飞皮肤 2.更新部分细节 3.增加小鹤九宫双拼 2020-10-25 1.去除了明月拼音，添加了以搜狗为基础的输入方案——🍀️四叶草简体拼音 2.以🍀️四叶草简体拼音为基础，添加了四叶草九宫输入方案，方便在手机端可以使用 3.同文手机端添加了两款机械键盘主题，cherry机械键盘/罗技 4.四叶草拼音输入法在手机端支持简繁转有一些问题，原因是没有正确配置opencc，修改后手机端支持简繁转换 5.极品五笔方案增加支持字符（输入平方可以选择²），emoji表情，繁简转换 6.支持五笔反查 ","permalink":"http://www.sivanlaai.top/posts/projects/rime/update_history/","summary":"更新历史 2021-08-01 1.修复九宫拼音不支持简拼的情况，如输入xqw不显示结果。 2.四叶草拼音去除25258个重复的词组，只保留最高频次的词组 1 2 3 ./","title":"Rime更新历史"},{"content":"不看下面的繁索的安装直接去发布页面下载已编译版本 最新发布页面 小狼毫（PC端） 0.备份小狼毫输入法安装目录的data文件夹，备份~\\AppData\\Rime文件夹，下载小狼毫安装包：https://rime.im/\n1.文件夹weasel\\data内所有文件复制到小狼毫输入法data目录覆盖\n2.文件夹weasel\\Rime内所有文件复制到~\\AppData\\Rime目录覆盖\n3.文件夹schemes\\基础文件内所有文件复制到~\\AppData\\Rime目录覆盖\n4.方案安装（可选）\n4.1 拼音方案安装\n文件夹schemes\\Clover四叶草拼音内所有文件复制到~\\AppData\\Rime目录覆盖\n4.2 五笔方案安装（五笔反查依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\极点五笔内所有文件复制到~\\AppData\\Rime目录覆盖\n4.3 双拼方案安装（双拼反查依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\小鹤双拼内所有文件复制到~\\AppData\\Rime目录覆盖\n4.4 郑码方案安装（反查依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\郑码内所有文件复制到~\\AppData\\Rime目录覆盖\n4.5 徐码方案安装（反查依赖拼音和五笔词库，需先安装4.1拼音方案和4.2五笔方案）\n文件夹schemes\\徐码内所有文件复制到~\\AppData\\Rime目录覆盖\n4.6 QQ五笔方案安装（反查依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\QQ五笔内所有文件复制到~\\AppData\\Rime目录覆盖\n4.7 自然码双拼方案安装（依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\自然码双拼内所有文件复制到~\\AppData\\Rime目录覆盖\n4.8 四叶草地球拼音方案安装（依赖拼音词库，需先安装4.1拼音方案）\n文件夹schemes\\四叶草地球拼音内所有文件复制到~\\AppData\\Rime目录覆盖\n5.重新部署\n同文（安卓端） 0.备份sdcard\\rime文件夹，下载同文apk：https://github.com/osfans/trime/releases\n1.文件夹trime\\rime内所有文件复制到sdcard\\rime目录覆盖\n2.文件夹schemes\\基础文件内所有文件复制到sdcard\\rime目录覆盖\n3.方案安装（可选）\n3.1 拼音方案安装\n文件夹schemes\\Clover四叶草拼音内所有文件复制到sdcard\\rime目录覆盖\n3.2 九宫拼音方案安装（依赖词库，必须先安装3.1，九宫不能显示，检查第一步是否正确安装）\n文件夹schemes\\Clover四叶草九宫拼音内所有文件复制到sdcard\\rime目录覆盖\n3.3 五笔方案安装（五笔反查依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\极点五笔内所有文件复制到sdcard\\rime目录覆盖\n3.4 双拼方案安装（双拼反查依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\小鹤双拼内所有文件复制到sdcard\\rime目录覆盖\n3.5 郑码方案安装（反查依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\郑码内所有文件复制到sdcard\\rime目录覆盖\n3.6 徐码方案安装（反查依赖拼音和五笔词库，需先安装3.1拼音方案和3.3五笔方案）\n文件夹schemes\\徐码内所有文件复制到sdcard\\rime目录覆盖\n3.7 QQ五笔方案安装（反查依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\QQ五笔内所有文件复制到sdcard\\rime目录覆盖\n3.8 自然码双拼方案安装（依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\自然码双拼内所有文件复制到sdcard\\rime目录覆盖\n3.9 四叶草地球拼音方案安装（依赖拼音词库，需先安装3.1拼音方案）\n文件夹schemes\\四叶草地球拼音内所有文件复制到sdcard\\rime目录覆盖\n4.重新部署\n","permalink":"http://www.sivanlaai.top/posts/projects/rime/installation/","summary":"不看下面的繁索的安装直接去发布页面下载已编译版本 最新发布页面 小狼毫（PC端） 0.备份小狼毫输入法安装目录的data文件夹，备份~\\AppDa","title":"Rime安装说明"},{"content":"【rime 小狼毫\\trime 同文】手机/PC一站式配置【简约皮肤\\拼音搜狗词库\\原创trime同文 四叶草九宫格拼音\\四叶草拼音\\小鹤双拼\\极品五笔\\QQ五笔\\徐码\\郑码】 说明 rime是一款支持多平台的开源输入法，开源所以不需要担心自己的输入数据被输入法所搜集。虽然优点这么多，但是要使得输入法好用起来门槛比较高了，主要是在词库配置优化，依赖的东西多而且复杂。本项目的目的在于安卓手机端和Win pc端都可以从本项目一站配置好rime输入法，达到省心好用的程度。鉴于PC端已经有很多大神有现成的设置，所以花的时间较少，主要是整理收集。\n发现手机端的优化一直没有做的较好的优化，本次主要的工作量是在手机端，所以从资源收集、皮肤设计、全键盘按钮设计和九宫格按键设计的每一个过程很耗费时间，有很多细节需要调整不断的修改文件和部署，有些地方不是清楚配置的地方还需要去看源码，经过一周的优化和设置，手机端已经使用起来很顺畅了。\n目前在手机端配置了基于四叶草拼音的九宫格输入法，为了表示对原作者的劳动致敬，遂命名为四叶草九宫方案，感觉已经和之前使用的百度或者讯飞输入法感觉相当。\nenjoy it! 好用的话就点个赞。感谢你的使用，因为本人同时在安卓和windows端使用，所以会一直更新。\n包含输入方案 四叶草拼音九宫格 四叶草地球拼音 极点五笔 小鹤双拼 🍀️四叶草简体拼音 大写数字 自然双拼 QQ86五笔（提取自qq五笔输入法，词库较为合理，推荐使用也是本人在使用的方案） 徐码 郑码 实用功能： 同文端 隐藏输入法：全键盘状态下按键G向下滑，九宫格状态下按[分词键]向下滑 编辑功能：全键盘状态下长按G，九宫格状态下按编辑键，可实现复制粘贴拷贝等功能 清空文本：删除键向左滑会清,空当前编辑文本 切换主题：空当前编辑文本长按带❖的按键切换主题 切换输入法：长按带✎的按键切换输入方案 更多设置：长按带设置符号⚙的按键，既可进入更多设置页面 界面预览： 小狼毫输入法（PC端） 简约现代蓝[配色：XNOM] 绿野仙踪绿[配色：佛振] Aqua[配色：佛振] 安卓[配色：Patricivs] 暗堂[配色：佛振] 孤寺[配色佛振] 同文输入法（安卓端） 🍀️四叶草九宫输入方案 手机端支持简繁转换 部分皮肤预览 同文风优化版[配色：Jaaiko，键盘布局：Jaaiko] 讯飞默认皮肤[配色：Jaaiko，键盘布局：Jaaiko] cherry机械键盘【小先生】 极致简约[配色：Jaaiko，键盘布局：Jaaiko] 五笔字根【佚名】 炫彩[键盘布局：Jaaiko] 安装方法 查看安装方法 更新历史 2021-09-01 1.前前后后、零零碎碎一共花了十来天地时间完成基于四叶草词库的地球拼音输入方案。 2021-08-30 1.四叶草支持多音字，最大程序的避免拼音错误，同时是以词组来分词的所以，不至于对所有的词组进行挨个多音字支持，而是优先词组。 例如弹出分词后还是弹出，所以只有tan chu的拼音，如果分词为弹\\出的话，则拼音会有tan chu 和 dan chu\n2.四叶草保留最大概率拼音词组，例如是不其中不为多音字，不的拼音有bu和fou，基于四叶草统计概率，bu的拼音概率更高，如果不是在词组的情况下，单字以bu为优先。 2021-08-18 1.写爬虫exact-pinyin-mark抓取百度汉语字典35W个组词数据用来精准匹配clover拼音数据。 2.使用luna拼音修复clover拼音数据。 3.使用phrase-pinyin-data修复clover拼音数据。 4.具有更高的基础词库，对于常见的拼音数据具有更高的识别率 2021-08-11 1.修复大字典中的的拼音错误。 2.基于python-pinyin对所有四叶草字典进行多音字修复，同时单字也支持多音字输入 1 2 3 例如朝拼chao zhao zhu输入 词频调整chao保留最高，依次递减10倍 例如chao为123，zhao为12，zhu为1 2021-08-01 1.修复九宫拼音不支持简拼的情况，如输入xqw不显示结果。 2.四叶草拼音去除25258个重复的词组，只保留最高频次的词组 1 2 3 ./Clover四叶草拼音/clover.phrase.dict.yaml:成事在人 cheng shi zai ren 22846 ./Clover四叶草拼音/THUOCL_chengyu.dict.yaml:成事在人 cheng shi zai ren 21 如上所示，成事在人，在两个字典中都有频次，只保留clover.phrase.dict.yaml中22846频次的词组 3.更新四叶草拼音错误，例如反弹拼音为fandan，错误修复来源@wisim，感谢@spphinslove的反馈 4.四叶草拼音-汉字帧-拼音错误修改，把帧错误拼音zheng相关的词组全部修改为帧zhen 修改费时费力，不易，请大家多多支持，点击支持。 2021-07-29 1.添加九宫格支持隐藏 2.添加常用功能说明 2021-06-27 1.更新同文3.2.0支持 2.修复小鹤双拼简繁转换问题 3.自然码支持简繁转换问题 以往全部历史 相关资源 小狼毫输入法：https://github.com/rime/weasel 同文输入法：https://github.com/osfans/trime 简繁转换opencc：https://github.com/BYVoid/OpenCC 拼音爬虫exact-pinyin-mark：https://github.com/SivanLaai/exact-pinyin-mark 部分配色均整理自互联网，配色包含作者信息。 感谢 感谢@lotem 感谢trime作者@osfans 感谢四叶草拼音作者@fkxxyz 感谢极品五笔作者@KyleBing 感谢qq五笔@qq五笔 感谢opencc作者@BYVoid 感谢@小鹤双拼 感谢@郑码 感谢@徐码 没有以上资源和各位的辛苦付出，也就没有这个项目 💖支持这个项目 如果你正在使用这个项目并感觉良好，或只是想要支持我继续开发，你可以通过如下任意 方式支持我：\nStar 并 分享这个项目 🚀 通过以下二维码 一次性捐款。 一杯咖啡。🍵 谢谢！ ❤️\n支付宝 支付宝 许可证 MIT\nCopyright (c) 2020-present SivanLaai\n","permalink":"http://www.sivanlaai.top/posts/projects/rime/info/","summary":"【rime 小狼毫\\trime 同文】手机/PC一站式配置【简约皮肤\\拼音搜狗词库\\原创trime同文 四叶草九宫格拼音\\四叶草拼音\\小鹤双拼\\极","title":"Rime输入法介绍"},{"content":"","permalink":"http://www.sivanlaai.top/friends/","summary":"","title":""}]